<script type="text/javascript">
        var gk_isXlsx = false;
        var gk_xlsxFileLookup = {};
        var gk_fileData = {};
        function filledCell(cell) {
          return cell !== '' && cell != null;
        }
        function loadFileData(filename) {
        if (gk_isXlsx && gk_xlsxFileLookup[filename]) {
            try {
                var workbook = XLSX.read(gk_fileData[filename], { type: 'base64' });
                var firstSheetName = workbook.SheetNames[0];
                var worksheet = workbook.Sheets[firstSheetName];

                // Convert sheet to JSON to filter blank rows
                var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1, blankrows: false, defval: '' });
                // Filter out blank rows (rows where all cells are empty, null, or undefined)
                var filteredData = jsonData.filter(row => row.some(filledCell));

                // Heuristic to find the header row by ignoring rows with fewer filled cells than the next row
                var headerRowIndex = filteredData.findIndex((row, index) =>
                  row.filter(filledCell).length >= filteredData[index + 1]?.filter(filledCell).length
                );
                // Fallback
                if (headerRowIndex === -1 || headerRowIndex > 25) {
                  headerRowIndex = 0;
                }

                // Convert filtered JSON back to CSV
                var csv = XLSX.utils.aoa_to_sheet(filteredData.slice(headerRowIndex)); // Create a new sheet from filtered array of arrays
                csv = XLSX.utils.sheet_to_csv(csv, { header: 1 });
                return csv;
            } catch (e) {
                console.error(e);
                return "";
            }
        }
        return gk_fileData[filename] || "";
        }
        </script><!DOCTYPE html>

<html lang="en">
<head>
<meta charset="utf-8"/>
<meta content="width=device-width, initial-scale=1.0" name="viewport"/>
<meta content="Hacked By Sphinx101" name="title"/>
<meta content="Your security got rekt!" name="description"/>
<meta content="hacked, Sphinx101, deface, cybersecurity" name="keywords"/>
<meta content="Sphinx101" name="author"/>
<title>Hacked by Sphinx101</title>
<style>
        body {
            margin: 0;
            padding: 0;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background: #1a1a1a;
            font-family: 'Courier New', Courier, monospace;
            overflow: hidden;
        }
        .container {
            text-align: center;
            color: #ff4040;
            text-shadow: 0 0 10px #ff4040;
        }
        h1 {
            font-size: 3em;
            animation: glitch 1s linear infinite;
        }
        p {
            font-size: 1.2em;
            color: #e0e0e0;
        }
        .blink {
            animation: blink 1s step-end infinite;
        }
        @keyframes glitch {
            2%, 64% { transform: translate(2px, 0); }
            4%, 60% { transform: translate(-2px, 0); }
            62% { transform: translate(0, 0) skew(5deg); }
        }
        @keyframes blink {
            50% { opacity: 0; }
        }
    
        img { border-radius: 15px; }
    </style>
</head>
<body>
<div class="container">
<img alt="Sleeping Lego" src="https://i.ibb.co.com/QjC7c0qh/cape.jpg" style="max-width: 250px; display:block; margin: 20px auto; filter: drop-shadow(0 0 10px red);"/>
<h1>HACKED BY SPHINX101</h1>
<p class="blink">You sleep peacefully, but your safety is threatened.<br> Wake up, before everything is destroyed.</p>
</div>
</body>
</html>